{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","usernameReg","setUsernameReg","passwordReg","setPasswordReg","usernameLog","setUsernameLog","passwordLog","setPasswordLog","loginStatue","setLoginStatue","registerStatue","setRegisterStatue","className","htmlFor","type","placeholder","onChange","e","target","value","onClick","Axios","post","username","password","then","Response","data","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkFeA,EA9EH,WACV,MAAuCC,mBAAS,IAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAuCF,mBAAS,IAAhD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAuCJ,mBAAS,IAAhD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAuCN,mBAAS,IAAhD,mBAAOO,EAAP,KAAqBC,EAArB,KAEA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAA6CV,mBAAS,IAAtD,mBAAOW,EAAP,KAAwBC,EAAxB,KA4BA,OACE,gCAAK,oBAAIC,UAAY,OAAhB,yBACL,sBAAKA,UAAY,OAAjB,UACE,sBAAKA,UAAU,WAAf,UACE,8CACA,uBAAOC,QAAQ,WAAf,yBACA,uBACA,uBAAOC,KAAK,OACZC,YAAY,cACZC,SAAY,SAACC,GAAOhB,EAAegB,EAAEC,OAAOC,UAC5C,uBACA,uBAAON,QAAQ,WAAf,sBACA,uBACA,uBAAOC,KAAK,WACZC,YAAY,cACZC,SAAY,SAACC,GAAOd,EAAec,EAAEC,OAAOC,UAC5C,uBACA,wBAAQC,QA3CG,WACfC,IAAMC,KAAK,iCACX,CAACC,SAAWvB,EAAcwB,SAAWtB,IAClCuB,MAAK,SAAAC,GACHA,EAASC,KAAKC,QAEfjB,EAAkBe,EAASC,KAAKC,SAIhCjB,EAAkB,GAAD,OAAIX,EAAJ,2BAiCjB,sBACA,mBAAGY,UAAY,SAAf,SAAyBF,OAE3B,sBAAKE,UAAY,QAAjB,UACA,uCACE,uBAAOC,QAAQ,WAAf,yBACA,uBACA,uBAAOC,KAAK,OACZC,YAAY,cACZC,SAAY,SAACC,GAAOZ,EAAeY,EAAEC,OAAOC,UAC5C,uBACA,uBAAON,QAAQ,WAAf,sBACA,uBACA,uBAAOC,KAAK,WACZC,YAAY,cACZC,SAAY,SAACC,GAAOV,EAAeU,EAAEC,OAAOC,UAC5C,uBACA,wBAAQC,QA9CA,WACZC,IAAMC,KAAK,8BACX,CAACC,SAAWnB,EAAaoB,SAAWlB,IAClCmB,MAAK,SAAAC,GACFA,EAASC,KAAKC,QAEfnB,EAAeiB,EAASC,KAAKC,SAE7BnB,EAAe,4BAAD,OAA6BiB,EAASC,KAAK,GAAGJ,eAsC5D,mBACA,mBAAGX,UAAY,SAAf,SAAyBJ,cC/DlBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a2ef7f93.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\n\nconst App = () =>{\n  const [usernameReg , setUsernameReg] = useState(\"\");\n  const [passwordReg , setPasswordReg] = useState(\"\");\n\n  const [usernameLog , setUsernameLog] = useState(\"\");\n  const [passwordLog , setPasswordLog] = useState(\"\");\n\n  const [loginStatue  , setLoginStatue] = useState(\"\");\n  const [registerStatue , setRegisterStatue] = useState(\"\");\n\n  const register = () =>{\n    Axios.post(\"http://localhost:3001/register\",\n    {username : usernameReg , password : passwordReg\n    }).then(Response => {\n      if(Response.data.message)\n      {\n        setRegisterStatue(Response.data.message);\n      }\n      else\n      {\n        setRegisterStatue(`${usernameReg} Sucessfully added`);\n      }\n    })\n  }\n  const login = () => {\n    Axios.post(\"http://localhost:3001/login\",\n    {username : usernameLog, password : passwordLog}\n    ).then(Response =>  {\n      if(Response.data.message)\n      {\n        setLoginStatue(Response.data.message);\n      }else{\n        setLoginStatue(`Sucessfully Logged in to ${Response.data[0].username }`);\n      }\n    });\n  }\n  return(\n    <div><h1 className = \"name\">Auth System</h1>\n    <div className = \"main\">\n      <div className=\"register\">\n        <h1>Registration</h1>\n        <label htmlFor=\"Username\">Username : </label>\n        <br/>\n        <input type=\"text\" \n        placeholder=\"Username...\"\n        onChange = {(e) => {setUsernameReg(e.target.value)}}></input>\n        <br/>\n        <label htmlFor=\"Password\">Password</label>\n        <br/>\n        <input type=\"password\" \n        placeholder=\"Password...\"\n        onChange = {(e) => {setPasswordReg(e.target.value)}}></input>\n        <br/>\n        <button onClick = {register}>Register</button>\n        <p className = \"statue\">{registerStatue}</p>\n      </div>\n      <div className = \"login\">\n      <h1>Login</h1>\n        <label htmlFor=\"Username\">Username : </label>\n        <br/>\n        <input type=\"text\" \n        placeholder=\"Username...\"\n        onChange = {(e) => {setUsernameLog(e.target.value)}}></input>\n        <br/>\n        <label htmlFor=\"Password\">Password</label>\n        <br/>\n        <input type=\"password\" \n        placeholder=\"Password...\"\n        onChange = {(e) => {setPasswordLog(e.target.value)}}></input>\n        <br/>\n        <button onClick = {login}>Login</button>\n        <p className = \"statue\">{loginStatue}</p>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}